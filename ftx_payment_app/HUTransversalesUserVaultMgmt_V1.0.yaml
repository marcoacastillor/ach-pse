swagger: "2.0"
info:
  description: "User vault manager documentation API"
  version: "2.0.0"
  title: "User Vault API"
host: $(host.name)
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
tags:
  - name: encrypt
    description: encrypt operation for user vault management
  - name: decrypt
    description: decrypt operation for user vault management


paths:
     
  /v1/ft/user-vault-mgmt/encrypt:
    post:
      tags:
        - encrypt
      parameters:
      
        - name: message-uuid
          in: header
          required: true
          type: string
          format: uuid
          description: "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
          
        - name: request-app-id
          in: header
          required: true
          type: string
          format: uuid
          description: "App identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
          
        - in: "body"
          name: "body"
          description: "Object whith data to encrypt"
          required: true
          schema:
            $ref: "#/definitions/encryptRequest"          
          
      responses:
        200:
          description: "Successful response of key user creation"
          schema:
            $ref: "#/definitions/encryptResponse"
        "400":
          schema:
            $ref: "#/definitions/generalError400"
          description: Bad request or mal formatted data
        "405":
          schema:
            $ref: "#/definitions/generalError405"
          description: Method Not Allowed.
        "415":
          schema:
            $ref: "#/definitions/generalError415"
          description: Unsupported Media Type.
        "500":
          schema:
            $ref: "#/definitions/generalError500"
          description: Internal Server Error
        "502":
          schema:
            $ref: "#/definitions/generalError502"
          description: Bad Gateway
        "503":
          schema:
            $ref: "#/definitions/generalError503"
          description: Service Unavailable
        default:
          description: Error.

  /v1/ft/user-vault-mgmt/decrypt:
    post:
      tags:
        - decrypt
      parameters:
      
        - name: message-uuid
          in: header
          required: true
          type: string
          format: uuid
          description: "Message identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
          
        - name: request-app-id
          in: header
          required: true
          type: string
          format: uuid
          description: "App identifier is used for traceability. This identifier allows you to identify the logs of the calls to the APIs in the log repositories, it is recommended to send a UUID for this value. Example: c4e6bd04-5149-11e7-b114-12654765af2f."
          
        - in: "body"
          name: "body"
          description: "Object whith data to decrypt"
          required: true
          schema:
            $ref: "#/definitions/decryptRequest"          
          
      responses:
        200:
          description: "Successful response of key user creation"
          schema:
            $ref: "#/definitions/decryptResponse"
        "400":
          schema:
            $ref: "#/definitions/generalError400"
          description: Bad request or mal formatted data
        "405":
          schema:
            $ref: "#/definitions/generalError405"
          description: Method Not Allowed.
        "415":
          schema:
            $ref: "#/definitions/generalError415"
          description: Unsupported Media Type.
        "500":
          schema:
            $ref: "#/definitions/generalError500"
          description: Internal Server Error
        "502":
          schema:
            $ref: "#/definitions/generalError502"
          description: Bad Gateway
        "503":
          schema:
            $ref: "#/definitions/generalError503"
          description: Service Unavailable
        default:
          description: Error.          

    
  
 

        
  /v1/ft/user-vault-mgmt/actuator/:
    get:
      tags:
        - actuator
      summary: API Monitoring
      responses:
        "200":
          description: 200 OK

  
 

definitions:


  encryptResponse:
    type: object
    properties:
      headers:
        $ref: '#/definitions/generalResponseHeaders201'
      messageResponse:
        $ref: "#/definitions/messageResponse"
      data:
        $ref: "#/definitions/encryptResult"
        
        
  decryptResponse:
    type: object
    properties:
      headers:
        $ref: '#/definitions/generalResponseHeaders201'
      messageResponse:
        $ref: "#/definitions/messageResponse"
      data:
        $ref: "#/definitions/dencryptResult"    
        
        
  encryptRequest:
    type: object
    properties: 
      data:
        type: string
        example: CUS234552345

  encryptResult:
    type: object
    properties: 
      data:
        type: string
        example: Q1VTMjM0NTUyMzQ1        

  decryptRequest:
    type: object
    properties: 
      data:
        type: string
        example: Q1VTMjM0NTUyMzQ1    

  dencryptResult:
    type: object
    properties: 
      data:
        type: string
        example: CUS234552345                


    
          
  generalResponseHeaders200:
    description: Traceability data and technical information from message.
    type: object
    required:
      - httpStatusCode
      - httpStatusDesc
      - messageUuid
      - requestDatetime
      - requestAppId
    properties:
      httpStatusCode:
        type: number
        example: 200
      httpStatusDesc:
        type: string
        example: OK
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestDatetime:
        type: string
        format: date-time
        example: '2017-01-24T05:00:00'
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd          
  generalResponseHeaders201:
    description: Traceability data and technical information from message.
    type: object
    required:
      - httpStatusCode
      - httpStatusDesc
      - messageUuid
      - requestDatetime
      - requestAppId
    properties:
      httpStatusCode:
        type: number
        example: 201
      httpStatusDesc:
        type: string
        example: CREATED
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestDatetime:
        type: string
        format: date-time
        example: "2017-01-24T05:00:00"
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  generalResponseHeaders202:
    description: Traceability data and technical information from message.
    type: object
    required:
      - httpStatusCode
      - httpStatusDesc
      - messageUuid
      - requestDatetime
      - requestAppId
    properties:
      httpStatusCode:
        type: number
        example: 202
      httpStatusDesc:
        type: string
        example: ACCEPTED
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestDatetime:
        type: string
        format: date-time
        example: "2017-01-24T05:00:00"
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  messageResponse:
    type: object
    properties:
      responseCode:
        type: string
        example: "0000"
      responseMessage:
        type: string
        example: "Success Transaction."
      responseDetails:
        type: string
        example: "System process information."
  generalError400:
    type: object
    properties:
      headers:
        $ref: "#/definitions/headersError400"
      messageResponse:
        $ref: "#/definitions/messageResponseError400"
      errors:
        $ref: "#/definitions/exampleErrors400"
  generalError401:
    type: object
    properties:
      headers:
        $ref: "#/definitions/headersError401"
      messageResponse:
        $ref: "#/definitions/messageResponseError401"
      errors:
        $ref: "#/definitions/exampleErrors401"
  generalError404:
    type: object
    properties:
      headers:
        $ref: "#/definitions/headersError404"
      messageResponse:
        $ref: "#/definitions/messageResponseError404"
      errors:
        $ref: "#/definitions/exampleErrors404"
  generalError405:
    type: object
    properties:
      headers:
        $ref: "#/definitions/headersError405"
      messageResponse:
        $ref: "#/definitions/messageResponseError405"
      errors:
        $ref: "#/definitions/exampleErrors405"
  generalError409:
    type: object
    properties:
      headers:
        $ref: "#/definitions/headersError409"
      messageResponse:
        $ref: "#/definitions/messageResponseError409"
      errors:
        $ref: "#/definitions/exampleErrors409"
  generalError415:
    type: object
    properties:
      headers:
        $ref: "#/definitions/headersError415"
      messageResponse:
        $ref: "#/definitions/messageResponseError415"
      errors:
        $ref: "#/definitions/exampleErrors415"
  generalError500:
    type: object
    properties:
      headers:
        $ref: "#/definitions/headersError500"
      messageResponse:
        $ref: "#/definitions/messageResponseError500"
      errors:
        $ref: "#/definitions/exampleErrors500"
  generalError502:
    type: object
    properties:
      headers:
        $ref: "#/definitions/headersError502"
      messageResponse:
        $ref: "#/definitions/messageResponseError502"
      errors:
        $ref: "#/definitions/exampleErrors502"
  generalError503:
    type: object
    properties:
      headers:
        $ref: "#/definitions/headersError503"
      messageResponse:
        $ref: "#/definitions/messageResponseError503"
      errors:
        $ref: "#/definitions/exampleErrors503"
  headersError400:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 400
      htttpStatusDesc:
        type: string
        example: "BAD_REQUEST"
      requestDateTime:
        type: string
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError401:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 401
      htttpStatusDesc:
        type: string
        example: "UNAUTHORIZED"
      requestDateTime:
        type: string
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError404:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 404
      htttpStatusDesc:
        type: string
        example: "NOT_FOUND"
      requestDateTime:
        type: string
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError405:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 405
      htttpStatusDesc:
        type: string
        example: "METHOD_NOT_ALLOWED"
      requestDateTime:
        type: string
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError409:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 409
      htttpStatusDesc:
        type: string
        example: "CONFLICT"
      requestDateTime:
        type: string
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError415:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 415
      htttpStatusDesc:
        type: string
        example: "UNSOPORTED MEDIA TYPE"
      requestDateTime:
        type: string
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError500:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 500
      htttpStatusDesc:
        type: string
        example: "INTERNAL_SERVER_ERROR"
      requestDateTime:
        type: string
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError502:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 502
      htttpStatusDesc:
        type: string
        example: "BAD_GATEWAY"
      requestDateTime:
        type: string
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  headersError503:
    type: object
    properties:
      httpStatusCode:
        type: integer
        example: 503
      htttpStatusDesc:
        type: string
        example: "SERVICE_UNAVAILABLE"
      requestDateTime:
        type: string
        example: "2023-01-05T19:13:56"
      messageUuid:
        type: string
        example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
      requestAppId:
        type: string
        example: acxff62e-6f12-42de-9012-1e7304418abd
  messageResponseError400:
    type: object
    properties:
      responseCode:
        type: string
        example: "XXXX"
      responseMessage:
        type: string
        example: "Bad Request Message"
      responseDetail:
        type: string
        example: "Aditional Information [Optional Value]"
  messageResponseError401:
    type: object
    properties:
      responseCode:
        type: string
        example: "XXXX"
      responseMessage:
        type: string
        example: "Bad Credentials"
      responseDetail:
        type: string
        example: "Aditional Information [Optional Value]"
  messageResponseError404:
    type: object
    properties:
      responseCode:
        type: string
        example: "XXXX"
      responseMessage:
        type: string
        example: "NO PERSISTAN DATA"
      responseDetail:
        type: string
        example: "Aditional Information [Optional Value]"
  messageResponseError405:
    type: object
    properties:
      responseCode:
        type: string
        example: "XXXX"
      responseMessage:
        type: string
        example: "Method Not Allowed"
      responseDetail:
        type: string
        example: "Aditional Information [Optional Value]"
  messageResponseError409:
    type: object
    properties:
      responseCode:
        type: string
        example: "XXXX"
      responseMessage:
        type: string
        example: "Conflict"
      responseDetail:
        type: string
        example: "Aditional Information [Optional Value]"
  messageResponseError415:
    type: object
    properties:
      responseCode:
        type: string
        example: "XXXX"
      responseMessage:
        type: string
        example: "Unsupported Media Type"
      responseDetail:
        type: string
        example: "Aditional Information [Optional Value]"
  messageResponseError500:
    type: object
    properties:
      responseCode:
        type: string
        example: "XXXX"
      responseMessage:
        type: string
        example: "Error Message"
      responseDetail:
        type: string
        example: "Aditional Information [Optional Value]"
  messageResponseError502:
    type: object
    properties:
      responseCode:
        type: string
        example: "XXXX"
      responseMessage:
        type: string
        example: "Error Message"
      responseDetail:
        type: string
        example: "Aditional Information [Optional Value]"
  messageResponseError503:
    type: object
    properties:
      responseCode:
        type: string
        example: "XXXX"
      responseMessage:
        type: string
        example: "Error Message"
      responseDetail:
        type: string
        example: "Aditional Information [Optional Value]"
  exampleErrors400:
    type: array
    description: Array for 400 errors.
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors401:
    type: array
    description: Array for 401 errors.
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors404:
    type: array
    description: Array for 404 errors.
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors405:
    type: array
    description: Array for 405 errors.
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors409:
    type: array
    description: Array for 409 errors.
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors415:
    type: array
    description: Array for 415 errors.
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors500:
    type: array
    description: Array for 500 errors.
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors502:
    type: array
    description: Array for 500 errors.
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  exampleErrors503:
    type: array
    description: Array for 500 errors.
    uniqueItems: true
    items:
      $ref: "#/definitions/generalError"
  generalError:
    type: object
    properties:
      errorCode:
        type: string
        example: "XXXX"
      errorDetail:
        type: string
        example: "Some Error Detail"

