BROKER SCHEMA co.com.ach.payment.executePayment


CREATE COMPUTE MODULE ExecuteBankPayment_2_ValidateResponseStartPay
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- declarar referencias a mensajes de entrada
		DECLARE refGroups REFERENCE TO InputRoot.ComIbmGroupCompleteNode;
		MOVE refGroups LASTCHILD;
		MOVE refGroups LASTCHILD;
		
		-- referencias a mensaje original y respuesta
		DECLARE refOriginal REFERENCE TO refGroups.OrigenRq;
		DECLARE refResponse REFERENCE TO refGroups.TokenRs;
		
		-- declarar referencia de salida
		CREATE FIELD OutputRoot.JSON.Data;
		DECLARE refOut REFERENCE TO OutputRoot.JSON.Data;
		
		-- validar si es exitoso, contin√∫a proceso
		-- mover mensaje original
		MOVE refOriginal LASTCHILD;
		MOVE refOriginal LASTCHILD;
		MOVE refOriginal LASTCHILD;
		MOVE refOriginal LASTCHILD;
		
		-- mensaje de respuesta
		MOVE refResponse LASTCHILD;
		MOVE refResponse LASTCHILD;
		MOVE refResponse LASTCHILD;
		MOVE refResponse LASTCHILD;
		
		IF EXISTS(refResponse.access_token[]) THEN
			--copias mensaje
			SET refOut 						= refOriginal;
			SET refOut.access_token	 		= refResponse.access_token;
	
			RETURN TRUE;
		ELSE
			SET OutputLocalEnvironment.Destination.CallableFlow.Reply.ReplyIdentifier = CAST(refOriginal.session.Destination.CallableFlow.Reply.ReplyIdentifier AS BLOB);
			
			-- construir mensaje ISO 20022 de error.
			SET refOut.group_header 																												= refOriginal.group_header;
			SET refOut.original_payment_information_and_status.original_payment_information_identification 											= refOriginal.payment_information.payment_information_identification;
			SET refOut.original_payment_information_and_status.transaction_information_and_status.transaction_status 								= refResponse.headers.httpStatusCode;
			SET refOut.original_payment_information_and_status.transaction_information_and_status.status_reason_information.originator.name 		= '';
			SET refOut.original_payment_information_and_status.transaction_information_and_status.status_reason_information.reason.code				= refResponse.messageResponse.responseCode;
			SET refOut.original_payment_information_and_status.transaction_information_and_status.status_reason_information.reason.property			= refResponse.messageResponse.responseMessage;
			SET refOut.original_payment_information_and_status.transaction_information_and_status.status_reason_information.additional_information	= COALESCE(refResponse.errors.*.errorDetail, refResponse.messageResponse.responseDetail);
			
			
			PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		END IF;
		
		RETURN FALSE;
	END;
END MODULE;
