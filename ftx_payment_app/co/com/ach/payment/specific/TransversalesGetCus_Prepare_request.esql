BROKER SCHEMA co.com.ach.payment.specific

DECLARE oauthTokenUrl EXTERNAL CHARACTER '';

CREATE COMPUTE MODULE TransversalesGetCus_Prepare_request
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- configurar url y parámetros de invocación
		--SET Environment.flujo = 'GetCUS'; --TODO: Se debe esperar si en auditoría se requiere o no.
		
		CREATE FIELD OutputRoot;
		DECLARE refInp REFERENCE TO InputRoot.MQRFH2.usr;
		
		--Configuraciones
		SET OutputLocalEnvironment.Destination.REST.Request.Accept 					= 'application/json';
		SET OutputLocalEnvironment.Destination.REST.Request.Timeout 				= backTimeout;
		SET OutputLocalEnvironment.Destination.REST.Request.BaseURL 				= backUrl;
		
		-- copiar datos en header
		--TODO: Validar desde mapeo.
		SET OutputLocalEnvironment.Destination.REST.Request.Parameters."message-uuid" 			= Environment.Variables.MQRFH2.usr.prop.messageUUID;
		SET OutputLocalEnvironment.Destination.REST.Request.Parameters."request-app-id" 		= Environment.Variables.MQRFH2.usr.prop.requestAppId;
		
		SET OutputRoot.JSON.Data.productId				= refInp.msgs.respProducts.data.productId;

		--SET Environment.Variables.MQRFH2 = InputRoot.MQRFH2;

			
		RETURN TRUE;
	END;
END MODULE;


CREATE COMPUTE MODULE TransversalesGetCus_Prepare_request_token
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- configurar url y parámetros de invocación
		--SET Environment.flujo = 'GetCUS'; --TODO: Se debe esperar si en auditoría se requiere o no.
		
		CREATE FIELD OutputRoot;
		
--		CREATE FIELD OutputRoot;
		DECLARE refInp REFERENCE TO InputRoot.MQRFH2.usr;
		
		--Configuraciones
--		SET OutputLocalEnvironment.Destination.HTTP.Request.Accept 					= 'application/json';
		SET OutputLocalEnvironment.Destination.HTTP.Request.Timeout 				= backTimeout;
		SET OutputLocalEnvironment.Destination.HTTP.Request.BaseURL 				= oauthTokenUrl;
		
		
		DELETE FIELD OutputRoot.MQRFH2;
		DELETE FIELD OutputRoot.JSON.Data.group_header;
		DELETE FIELD OutputRoot.JSON.Data.payment_infor;
		
		SET OutputRoot.JSON.Data.scope				= 'transaction-query';

		-- copiar datos en header
		--TODO: Validar desde mapeo.
		--SET OutputLocalEnvironment.Destination.REST.Request.Parameters."message-uuid" 			= refInp.prop.messageUUID;
			
		SET Environment.Variables.MQRFH2 = InputRoot.MQRFH2;

			
		RETURN TRUE;
	END;
END MODULE;