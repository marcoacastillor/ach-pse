/*
 *
 * File name: EmailConfigParams.esql
 *
 * Purpose:   ESQL de modulos generales Framework Integracion
 *
 * Authors:   Assist
 *            
 *
 * Version:   1.0
 *
 * @copyright Assist  All rights reserved.
 *
 */
BROKER SCHEMA com.ibus.common.modules.general

--Generar mensaje Fault WebService.
DECLARE soapenv NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';

/*
 * Crea el mensaje de excepción cuando existe un error en el flujo del servicio específico 
 */
CREATE COMPUTE MODULE CreateErrorMessage
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE codeError, nameError, descError CHARACTER '';
		DECLARE refEnvUsr REFERENCE TO Environment.Variables.usr;
		
		--Poner información de configuración en cabecera de mensaje.
		SET OutputRoot.MQMD 		= InputRoot.MQMD;
		SET OutputRoot.MQMD.ReplyToQ	= COALESCE(NULLIF(InputRoot.MQMD.ReplyToQ, ''), refEnvUsr.srvConfiguration.Correlation.Reply.ReplyToQ)  ;
		SET OutputRoot.MQRFH2 		= InputRoot.MQRFH2;
		
		DECLARE refLog REFERENCE TO  OutputRoot.MQRFH2.usr.log;
		SET refLog.prevTransactionDate 	= refLog.transactionDate;
		SET refLog.transactionDate 		= CURRENT_TIMESTAMP;
		
		--Declarar referencia a lista de excepciones.
		DECLARE refExceptionList REFERENCE TO InputExceptionList;
		DECLARE exceptionDetails ROW;
		
		CALL com.ibus.common.procedures.util.getDescriptionExceptionList(refExceptionList, exceptionDetails);
	
		CREATE FIELD OutputRoot.XMLNSC.exceptionReq.exception;
		DECLARE refOutException REFERENCE TO OutputRoot.XMLNSC.exceptionReq.exception;

		CALL com.ibus.common.procedures.general.createErrorLogMessage(refOutException,exceptionDetails);

		--Enviar a registro de error
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		
		--Limpiar arbol XMLNSC del mensaje de error
		SET OutputRoot.XMLNSC = NULL;
		
		CREATE FIELD OutputRoot.XMLNSC;
		DECLARE refOut REFERENCE TO OutputRoot.XMLNSC;
		
		
		SET refEnvUsr.exception = exceptionDetails;
		
		--CALL com.ibus.common.procedures.general.createWSErrorMessage(refExceptionList,refEnvUsr,refOut);
				                                  
		RETURN TRUE;		
	END;
END MODULE;




/*
 * Crea el mensaje de excepción cuando existe un error en el flujo del framework
 */
CREATE COMPUTE MODULE CreateExceptionMessage
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE codeError, nameError, descError CHARACTER '';
		
		--Poner información de configuración en cabecera de mensaje.
		SET OutputRoot.MQMD 		= InputRoot.MQMD;
		SET OutputRoot.MQRFH2 		= InputRoot.MQRFH2;
		
		DECLARE refLog REFERENCE TO  OutputRoot.MQRFH2.usr.log;
		SET refLog.prevTransactionDate 	= refLog.transactionDate;
		SET refLog.transactionDate 		= CURRENT_TIMESTAMP;
		
		--Declarar referencia a lista de excepciones.
		DECLARE refExceptionList REFERENCE TO InputExceptionList;
		DECLARE exceptionDetails ROW;
		
		CALL com.ibus.common.procedures.util.getDescriptionExceptionList(refExceptionList, exceptionDetails);
	
		CREATE FIELD OutputRoot.XMLNSC.exceptionReq.exception;
		DECLARE refOutException REFERENCE TO OutputRoot.XMLNSC.exceptionReq.exception;

		CALL com.ibus.common.procedures.general.createErrorLogMessage(refOutException,exceptionDetails);
		RETURN TRUE;		
	END;
END MODULE;

		
