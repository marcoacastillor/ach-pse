openapi: 3.0.0
info:
  title: ptx-idgenerator
  version: 1.0.0
  description: >-
    This API allows managing the generate the CUS code for the registration of
    the transaction. All relevant methods are included during the service client
    integration process.
  contact:
    name: https://www.achcolombia.com.co/contactenos
    email: admin@ach.com.co
    url: https://www.achcolombia.com.co/contactenos
  x-ibm-name: procesadortx-id-generator
servers:
  - url: /v1
tags:
  - name: Id Generator
    description: Operaciones para realizar el monitoreo de la API.
paths:
  /v1/po/id-generator-mgmt/idgenerator:
    post: 
      summary: Method for Generate Id By productId
      parameters:
        - name: message-uuid
          in: header
          required: true
          schema:
            type: string
            format: uuid
            minLength: 1
            maxLength: 50
          description: >-
            Message identifier is used for traceability. This identifier allows
            you to identify the logs of the calls to the APIs in the log
            repositories, it is recommended to send a UUID for this value.
            Example: c4e6bd04-5149-11e7-b114-12654765af2f.
        - name: request-app-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
            minLength: 1
            maxLength: 50
          description: >-
            Message identifier is used for traceability. This identifier allows
            you to identify the logs of the calls to the APIs in the log
            repositories, it is recommended to send a UUID for this value.
            Example: c4e6bd04-5149-11e7-b114-12654765af2f.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cusRq'
      responses:
        '200':
          description: Success CUS generation details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cusResponse'
        '400':
          description: Bad request or mal formatted data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '401':
          description: Failed Authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '405':
          description: Method Not Allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '415':
          description: Unsupported Media Type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        default:
          description: unexpected error
      tags:
        - Id Generator
      security:
        - clientId: []
          clientSecret: []
          oauth2-ptx:
            - generate-id.create
  /po/id-generator-mgmt/generate-batch-sequence:
    post:
      summary: Method for Success Generate Batch Block of Sequences by productId
      parameters:
        - name: message-uuid
          in: header
          required: true
          schema:
            type: string
            format: uuid
            minLength: 1
            maxLength: 50
          description: >-
            Message identifier is used for traceability. This identifier allows
            you to identify the logs of the calls to the APIs in the log
            repositories, it is recommended to send a UUID for this value.
            Example: c4e6bd04-5149-11e7-b114-12654765af2f.
        - name: request-app-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
            minLength: 1
            maxLength: 50
          description: >-
            Message identifier is used for traceability. This identifier allows
            you to identify the logs of the calls to the APIs in the log
            repositories, it is recommended to send a UUID for this value.
            Example: c4e6bd04-5149-11e7-b114-12654765af2f.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cusRq'
      responses:
        '202':
          description: Detalles de generacon de CUS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericResponse'
        '400':
          description: Bad request or mal formatted data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '401':
          description: Failed Authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '405':
          description: Method Not Allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '415':
          description: Unsupported Media Type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        default:
          description: unexpected error
      tags:
        - Id Generator
      security:
        - clientId: []
          clientSecret: []
  /po/id-generator-mgmt/clear-queue:
    post:
      summary: Method for Delete Sequence Block by productId
      parameters:
        - name: message-uuid
          in: header
          required: true
          schema:
            type: string
            format: uuid
            minLength: 1
            maxLength: 50
          description: >-
            Message identifier is used for traceability. This identifier allows
            you to identify the logs of the calls to the APIs in the log
            repositories, it is recommended to send a UUID for this value.
            Example: c4e6bd04-5149-11e7-b114-12654765af2f.
        - name: request-app-id
          in: header
          required: true
          schema:
            type: string
            format: uuid
            minLength: 1
            maxLength: 50
          description: >-
            Message identifier is used for traceability. This identifier allows
            you to identify the logs of the calls to the APIs in the log
            repositories, it is recommended to send a UUID for this value.
            Example: c4e6bd04-5149-11e7-b114-12654765af2f.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cusRq'
      responses:
        '202':
          description: Detalles de generacon de CUS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/genericResponse'
        '400':
          description: Bad request or mal formatted data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '401':
          description: Failed Authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '404':
          description: Resource Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '405':
          description: Method Not Allowed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '415':
          description: Unsupported Media Type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageErrorResponse'
        default:
          description: unexpected error
      tags:
        - Id Generator
      security:
        - clientId: []
          clientSecret: []
  /po/generate-id/health:
    get:
      summary: Monitoreo de la API
      responses:
        '200':
          description: 200 OK
      tags:
        - Monitoring
components:
  schemas:
    cusRq:
      type: object
      required:
        - productId
      properties:
        productId:
          type: integer
          description: Product code.
        nit:
          type: string
          description: NIT of the Originating Participant - Tranfiya.
    genericResponse:
      type: object
      properties:
        headers:
          $ref: '#/components/schemas/generalResponseHeaders202'
        messageResponse:
          $ref: '#/components/schemas/messageResponse'
    cusResponse:
      type: object
      properties:
        headers:
          $ref: '#/components/schemas/generalResponseHeaders200'
        messageResponse:
          $ref: '#/components/schemas/messageResponse'
        data:
          $ref: '#/components/schemas/cusResponseData'
    cusResponseData:
      type: object
      properties:
        cus:
          type: string
          example: '01231129000000000001'
    generalResponseHeaders200:
      description: Traceability data and technical information from message.
      type: object
      required:
        - httpStatusCode
        - httpStatusDesc
        - messageUuid
        - requestDatetime
        - requestAppId
      properties:
        httpStatusCode:
          type: number
          example: 200
        httpStatusDesc:
          type: string
          example: OK
        messageUuid:
          type: string
          example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
        requestDatetime:
          type: string
          format: date-time
          example: '2017-01-24T05:00:00'
        requestAppId:
          type: string
          example: acxff62e-6f12-42de-9012-1e7304418abd
    generalResponseHeaders201:
      description: Traceability data and technical information from message.
      type: object
      required:
        - httpStatusCode
        - httpStatusDesc
        - messageUuid
        - requestDatetime
        - requestAppId
      properties:
        httpStatusCode:
          type: number
          example: 201
        httpStatusDesc:
          type: string
          example: CREATED
        messageUuid:
          type: string
          example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
        requestDatetime:
          type: string
          format: date-time
          example: '2017-01-24T05:00:00'
        requestAppId:
          type: string
          example: acxff62e-6f12-42de-9012-1e7304418abd
    generalResponseHeaders202:
      description: Traceability data and technical information from message.
      type: object
      required:
        - httpStatusCode
        - httpStatusDesc
        - messageUuid
        - requestDatetime
        - requestAppId
      properties:
        httpStatusCode:
          type: number
          example: 202
        httpStatusDesc:
          type: string
          example: ACCEPTED
        messageUuid:
          type: string
          example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
        requestDatetime:
          type: string
          format: date-time
          example: '2017-01-24T05:00:00'
        requestAppId:
          type: string
          example: acxff62e-6f12-42de-9012-1e7304418abd
    messageResponse:
      type: object
      properties:
        responseCode:
          type: string
          example: '0000'
        responseMessage:
          type: string
          example: Success Transaction.
        responseDetails:
          type: string
          example: System process information.
    messageErrorResponse:
      type: object
      description: Mensaje de respuesta generico.
      required:
        - meta
        - errors
      properties:
        meta:
          $ref: '#/components/schemas/meta'
        statusCode:
          type: number
          description: >-
            Codigo de estado HTTP (status code) asociado al mensaje de la
            respuesta del llamado a la API.
          example: 400
        statusDesc:
          type: string
          description: >-
            Titulo asociado al codigo de estado HTTP (status code) asociado al
            mensaje de  la respuesta del llamado a la API.
          example: Bad Request.
        errors:
          type: array
          description: Lista de errores detectados
          uniqueItems: true
          items:
            $ref: '#/components/schemas/errorResponse'
      additionalProperties: false
    meta:
      description: Datos de trazabilidad e informacion tecnica del mensaje.
      type: object
      required:
        - messageUuid
        - requestDt
        - requestAppId
      properties:
        messageUuid:
          type: string
          example: c4e6bd04-5149-11e7-b114-a2f933d5fe66
        requestDt:
          type: string
          format: date-time
          example: '2017-01-24 05:00:00.000Z'
        requestAppId:
          type: string
          example: acxff62e-6f12-42de-9012-1e7304418abd
    errorResponse:
      type: object
      description: Objeto que describe el error
      required:
        - code
        - detail
      properties:
        code:
          description: >-
            Error que se presenta en el llamado del API, Se debe homologar de
            los errores de los backend.
          type: string
          example: 400
        detail:
          description: Es la descripcion del mensaje de error.
          type: string
          example: El campo id no cumple con la definicion.
    messageResponseError400:
      type: object
      properties:
        responseCode:
          type: string
          example: XXXX
        responseMessage:
          type: string
          example: Bad Request Message
        responseDetail:
          type: string
          example: Aditional Information [Optional Value]
    messageResponseError401:
      type: object
      properties:
        responseCode:
          type: string
          example: XXXX
        responseMessage:
          type: string
          example: Bad Credentials
        responseDetail:
          type: string
          example: Aditional Information [Optional Value]
    messageResponseError404:
      type: object
      properties:
        responseCode:
          type: string
          example: XXXX
        responseMessage:
          type: string
          example: NO PERSISTAN DATA
        responseDetail:
          type: string
          example: Aditional Information [Optional Value]
    messageResponseError405:
      type: object
      properties:
        responseCode:
          type: string
          example: XXXX
        responseMessage:
          type: string
          example: Method Not Allowed
        responseDetail:
          type: string
          example: Aditional Information [Optional Value]
    messageResponseError409:
      type: object
      properties:
        responseCode:
          type: string
          example: XXXX
        responseMessage:
          type: string
          example: Conflict
        responseDetail:
          type: string
          example: Aditional Information [Optional Value]
    messageResponseError415:
      type: object
      properties:
        responseCode:
          type: string
          example: XXXX
        responseMessage:
          type: string
          example: Unsupported Media Type
        responseDetail:
          type: string
          example: Aditional Information [Optional Value]
    messageResponseError500:
      type: object
      properties:
        responseCode:
          type: string
          example: XXXX
        responseMessage:
          type: string
          example: Error Message
        responseDetail:
          type: string
          example: Aditional Information [Optional Value]
    messageResponseError502:
      type: object
      properties:
        responseCode:
          type: string
          example: XXXX
        responseMessage:
          type: string
          example: Error Message
        responseDetail:
          type: string
          example: Aditional Information [Optional Value]
    messageResponseError503:
      type: object
      properties:
        responseCode:
          type: string
          example: XXXX
        responseMessage:
          type: string
          example: Error Message
        responseDetail:
          type: string
          example: Aditional Information [Optional Value]
    exampleErrors400:
      type: array
      description: Array for 400 errors.
      uniqueItems: true
      items:
        $ref: '#/components/schemas/generalError'
    exampleErrors401:
      type: array
      description: Array for 401 errors.
      uniqueItems: true
      items:
        $ref: '#/components/schemas/generalError'
    exampleErrors404:
      type: array
      description: Array for 404 errors.
      uniqueItems: true
      items:
        $ref: '#/components/schemas/generalError'
    exampleErrors405:
      type: array
      description: Array for 405 errors.
      uniqueItems: true
      items:
        $ref: '#/components/schemas/generalError'
    exampleErrors409:
      type: array
      description: Array for 409 errors.
      uniqueItems: true
      items:
        $ref: '#/components/schemas/generalError'
    exampleErrors415:
      type: array
      description: Array for 415 errors.
      uniqueItems: true
      items:
        $ref: '#/components/schemas/generalError'
    exampleErrors500:
      type: array
      description: Array for 500 errors.
      uniqueItems: true
      items:
        $ref: '#/components/schemas/generalError'
    exampleErrors502:
      type: array
      description: Array for 500 errors.
      uniqueItems: true
      items:
        $ref: '#/components/schemas/generalError'
    exampleErrors503:
      type: array
      description: Array for 500 errors.
      uniqueItems: true
      items:
        $ref: '#/components/schemas/generalError'
    generalError:
      type: object
      properties:
        errorCode:
          type: string
          example: XXXX
        errorDetail:
          type: string
          example: Some Error Detail
  securitySchemes:
    clientId:
      type: apiKey
      description: ''
      in: header
      name: Client-Id
      x-key-type: client_id
    clientSecret:
      type: apiKey
      description: ''
      in: header
      name: Client-Secret
      x-key-type: client_secret
    oauth2-ptx:
      type: oauth2
      x-ibm-oauth-provider: ptx-token
      flows:
        clientCredentials:
          tokenUrl: https://$(catalog.url)/ptx-token/oauth2/token
          scopes:
            generate-id.create: Scope para consulta
security:
  - clientId: []
    clientSecret: []
    oauth2-ptx:
      - generate-id.create